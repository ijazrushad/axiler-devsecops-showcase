# nginx-proxy-deployment.yaml

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-grafana-config
  namespace: default
data:
  default.conf: |
    upstream grafana {
        server prometheus-grafana.monitoring.svc.cluster.local:80;
    }
    server {
        listen 80;
        server_name _;
        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
        }
        location /healthz {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-proxy
  namespace: default
  labels:
    app: grafana-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana-proxy
  template:
    metadata:
      labels:
        app: grafana-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:1.21-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-grafana-config

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-proxy
  namespace: default
spec:
  selector:
    app: grafana-proxy
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
# Certificate (already exists)
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: shared-ssl-certificate
  namespace: default
spec:
  domains:
    - juiceshop.34.107.194.151.nip.io
    - grafana.34.107.194.151.nip.io

---
# Single Ingress for both services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shared-ingress
  namespace: default
  annotations:
    networking.gke.io/managed-certificates: "shared-ssl-certificate"
    kubernetes.io/ingress.global-static-ip-name: "juice-shop-static-ip"
    kubernetes.io/ingress.allow-http: "false"
spec:
  rules:
  - host: "juiceshop.34.107.194.151.nip.io"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: juiceshop-prod-juice-shop
            port:
              number: 80
  - host: "grafana.34.107.194.151.nip.io"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-proxy
            port:
              number: 80